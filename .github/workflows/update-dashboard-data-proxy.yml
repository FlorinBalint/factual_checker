name: Update Dashboard Data with Proxy

on:
  schedule:
    # Run daily at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies including proxy tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests[socks] pysocks fake-useragent
        
    - name: Setup multiple proxy options
      run: |
        # Install and start Tor
        sudo apt-get update
        sudo apt-get install -y tor privoxy
        sudo systemctl start tor
        sudo systemctl start privoxy
        sleep 15
        
    - name: Generate CSV data with proxy fallback
      run: |
        cd app
        # Try normal request first, then with proxy if it fails
        python main.py --output ../dashboard/politician_stats.csv --generate_party_stats false --workers 1 || \
        (echo "Normal request failed, trying with Tor proxy..." && \
         export HTTP_PROXY=socks5://127.0.0.1:9050 && \
         export HTTPS_PROXY=socks5://127.0.0.1:9050 && \
         python main.py --output ../dashboard/politician_stats.csv --generate_party_stats false --workers 1)
      env:
        PYTHONUNBUFFERED: 1
        
    - name: Fallback to predefined politicians if crawling fails
      run: |
        cd app
        if [ ! -f ../dashboard/politician_stats.csv ] || [ ! -s ../dashboard/politician_stats.csv ]; then
          echo "Full crawling failed, using predefined politician list..."
          python main.py --politicians "Klaus Iohannis,Marcel Ciolacu,Elena Lasconi,George Simion,Diana Iovanovici-Șoșoacă,Nicolae Ciucă,Kelemen Hunor,Călin Georgescu" --output ../dashboard/politician_stats.csv --generate_party_stats false --workers 1
        fi
        
    - name: Check if CSV was generated
      run: |
        if [ ! -f dashboard/politician_stats.csv ]; then
          echo "Error: CSV file was not generated even with fallback"
          exit 1
        fi
        echo "CSV file generated successfully"
        ls -la dashboard/politician_stats.csv
        head -5 dashboard/politician_stats.csv
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dashboard/politician_stats.csv
        
        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-update politician stats data - $(date '+%Y-%m-%d %H:%M UTC')"
          git push
        fi
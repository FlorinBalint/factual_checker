name: Deploy Dashboard to GitHub Pages

on:
  push:
    branches: [ main ]
    paths: 
      - 'dashboard/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install minification tools
        run: |
          npm install -g terser csso-cli html-minifier-terser
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Copy and minify dashboard files
        run: |
          mkdir -p _site
          
          # Copy and minify HTML files directly to root
          find dashboard -name "*.html" -exec sh -c '
            html-minifier-terser --collapse-whitespace --remove-comments --minify-css true --minify-js true --preserve-line-breaks --keep-closing-slash --case-sensitive "$1" -o "_site/$(basename "$1")"
          ' _ {} \;
          
          # Copy and minify CSS files directly to root
          find dashboard -name "*.css" -exec sh -c '
            csso "$1" --output "_site/$(basename "$1")"
          ' _ {} \;
          
          # Copy and minify JS files directly to root (preserve ES6 modules)
          find dashboard -name "*.js" -exec sh -c '
            terser "$1" --compress --mangle --module -o "_site/$(basename "$1")"
          ' _ {} \;
          
          # Handle modules directory
          mkdir -p _site/modules
          find dashboard/modules -name "*.js" -exec sh -c '
            terser "$1" --compress --mangle --module -o "_site/modules/$(basename "$1")"
          ' _ {} \;
          
          # Copy CSV data directly to root
          find dashboard -name "*.csv" -exec cp {} _site/ \;
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4